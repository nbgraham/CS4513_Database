<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="20" passed="19">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="54640" started-at="2016-11-20T21:03:31Z" finished-at="2016-11-20T21:04:26Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="54640" started-at="2016-11-20T21:03:31Z" finished-at="2016-11-20T21:04:26Z">
      <class name="test.TestDatabase">
        <test-method status="PASS" signature="setupDB()[pri:0, instance:null(test.TestDatabase)]" name="setupDB" is-config="true" duration-ms="6106" started-at="2016-11-20T15:03:31Z" finished-at="2016-11-20T15:03:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupDB -->
        <test-method status="PASS" signature="test01_addEmployees()[pri:0, instance:null(test.TestDatabase)]" name="test01_addEmployees" duration-ms="512" started-at="2016-11-20T15:03:37Z" finished-at="2016-11-20T15:03:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01_addEmployees -->
        <test-method status="PASS" signature="test02_addProducts()[pri:0, instance:null(test.TestDatabase)]" name="test02_addProducts" duration-ms="935" started-at="2016-11-20T15:03:38Z" finished-at="2016-11-20T15:03:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02_addProducts -->
        <test-method status="PASS" signature="test03_addCustomers()[pri:0, instance:null(test.TestDatabase)]" name="test03_addCustomers" duration-ms="1247" started-at="2016-11-20T15:03:39Z" finished-at="2016-11-20T15:03:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03_addCustomers -->
        <test-method status="PASS" signature="test04_addAccounts()[pri:0, instance:null(test.TestDatabase)]" name="test04_addAccounts" duration-ms="734" started-at="2016-11-20T15:03:40Z" finished-at="2016-11-20T15:03:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test04_addAccounts -->
        <test-method status="PASS" signature="test05_addComplaints()[pri:0, instance:null(test.TestDatabase)]" name="test05_addComplaints" duration-ms="149" started-at="2016-11-20T15:03:41Z" finished-at="2016-11-20T15:03:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test05_addComplaints -->
        <test-method status="PASS" signature="test06_addAccidents()[pri:0, instance:null(test.TestDatabase)]" name="test06_addAccidents" duration-ms="149" started-at="2016-11-20T15:03:41Z" finished-at="2016-11-20T15:03:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test06_addAccidents -->
        <test-method status="PASS" signature="test07_getDateAndTimeForProduct()[pri:0, instance:null(test.TestDatabase)]" name="test07_getDateAndTimeForProduct" duration-ms="186" started-at="2016-11-20T15:03:41Z" finished-at="2016-11-20T15:03:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test07_getDateAndTimeForProduct -->
        <test-method status="PASS" signature="test08_getProductsMadeByWorker()[pri:0, instance:null(test.TestDatabase)]" name="test08_getProductsMadeByWorker" duration-ms="330" started-at="2016-11-20T15:03:41Z" finished-at="2016-11-20T15:03:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test08_getProductsMadeByWorker -->
        <test-method status="PASS" signature="test09_getErrorByQC()[pri:0, instance:null(test.TestDatabase)]" name="test09_getErrorByQC" duration-ms="110" started-at="2016-11-20T15:03:41Z" finished-at="2016-11-20T15:03:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test09_getErrorByQC -->
        <test-method status="PASS" signature="test10_getCostProduct3RepairedBy()[pri:0, instance:null(test.TestDatabase)]" name="test10_getCostProduct3RepairedBy" duration-ms="111" started-at="2016-11-20T15:03:41Z" finished-at="2016-11-20T15:03:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test10_getCostProduct3RepairedBy -->
        <test-method status="PASS" signature="test11_getCustomerWhoPurchasedAllColor()[pri:0, instance:null(test.TestDatabase)]" name="test11_getCustomerWhoPurchasedAllColor" duration-ms="140" started-at="2016-11-20T15:03:42Z" finished-at="2016-11-20T15:03:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test11_getCustomerWhoPurchasedAllColor -->
        <test-method status="PASS" signature="test12_getWorkDaysLostFromRepairs()[pri:0, instance:null(test.TestDatabase)]" name="test12_getWorkDaysLostFromRepairs" duration-ms="38" started-at="2016-11-20T15:03:42Z" finished-at="2016-11-20T15:03:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test12_getWorkDaysLostFromRepairs -->
        <test-method status="PASS" signature="test13_getAllCustomersWhoAreWorkers()[pri:0, instance:null(test.TestDatabase)]" name="test13_getAllCustomersWhoAreWorkers" duration-ms="71" started-at="2016-11-20T15:03:42Z" finished-at="2016-11-20T15:03:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test13_getAllCustomersWhoAreWorkers -->
        <test-method status="PASS" signature="test14_customersPurchasedOwn()[pri:0, instance:null(test.TestDatabase)]" name="test14_customersPurchasedOwn" duration-ms="70" started-at="2016-11-20T15:03:42Z" finished-at="2016-11-20T15:03:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test14_customersPurchasedOwn -->
        <test-method status="PASS" signature="test15_averageCostProductYear()[pri:0, instance:null(test.TestDatabase)]" name="test15_averageCostProductYear" duration-ms="37" started-at="2016-11-20T15:03:42Z" finished-at="2016-11-20T15:03:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test15_averageCostProductYear -->
        <test-method status="PASS" signature="test16_switchTSandQC()[pri:0, instance:null(test.TestDatabase)]" name="test16_switchTSandQC" duration-ms="218" started-at="2016-11-20T15:03:42Z" finished-at="2016-11-20T15:03:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test16_switchTSandQC -->
        <test-method status="PASS" signature="test17_deleteAccidentsInRange()[pri:0, instance:null(test.TestDatabase)]" name="test17_deleteAccidentsInRange" duration-ms="146" started-at="2016-11-20T15:03:42Z" finished-at="2016-11-20T15:03:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test17_deleteAccidentsInRange -->
        <test-method status="PASS" signature="test19_export()[pri:0, instance:null(test.TestDatabase)]" name="test19_export" duration-ms="115" started-at="2016-11-20T15:03:42Z" finished-at="2016-11-20T15:03:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test19_export -->
        <test-method status="PASS" signature="test20_quit()[pri:0, instance:null(test.TestDatabase)]" name="test20_quit" duration-ms="1" started-at="2016-11-20T15:03:42Z" finished-at="2016-11-20T15:03:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test20_quit -->
        <test-method status="FAIL" signature="test21_Error()[pri:0, instance:null(test.TestDatabase)]" name="test21_Error" duration-ms="43139" started-at="2016-11-20T15:03:42Z" finished-at="2016-11-20T15:04:26Z">
          <exception class="junit.framework.AssertionFailedError">
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertTrue(Assert.java:31)
	at junit.framework.TestCase.assertTrue(TestCase.java:201)
	at test.TestDatabase.test21_Error(TestDatabase.java:416)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test21_Error -->
        <test-method status="PASS" signature="cleanupDB()[pri:0, instance:null(test.TestDatabase)]" name="cleanupDB" is-config="true" duration-ms="42" started-at="2016-11-20T15:04:26Z" finished-at="2016-11-20T15:04:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanupDB -->
      </class> <!-- test.TestDatabase -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
